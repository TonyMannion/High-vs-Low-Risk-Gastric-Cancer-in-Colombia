#install.packages('BiocManager')
#library('BiocManager')
#BiocManager::install('phyloseq')
#library(phyloseq); packageVersion("phyloseq")

#install.packages("ggplot2")
#library("ggplot2")

#BiocManager::install("microbiome")
#library(microbiome)  

#install.packages("vegan")
#library("vegan")

#BiocManager::install("DESeq2")
#library("DESeq2")

#BiocManager::install("ALDEx2")
#library(ALDEx2)

#install.packages("tidyverse")
#library(tidyverse)

#BiocManager::install("DESeq2")
#library("DESeq2")

#BiocManager::install("ANCOMBC")
#library("ANCOMBC")

#######delete all variables to start over######
rm(list=ls())
###############################################

##########raw reads##########

#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script


#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)

#Bar plot raw reads at kingdom level (rank 2)
plot_bar(phyloseqin, fill = 'Kingdom', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/kingdom_level_raw_reads_bar.tiff')

#Bar plot raw reads at phylum levels (rank 2)
plot_bar(phyloseqin, fill = 'Phylum', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/phylum_level_raw_reads_bar.tiff')

#Bar plot raw reads at top 10 kingdom
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Kingdom", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Kingdom', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_kingdom_raw_reads_bar.tiff')

#Bar plot raw reads at top 10 phylum
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Phylum", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Phylum', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_phylum_raw_reads_bar.tiff')

#Bar plot raw reads at top 10 class
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Class", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Class', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_class_raw_reads_bar.tiff')

#Bar plot raw reads at top 10 order
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Order", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Order', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_order_raw_reads_bar.tiff')

#Bar plot raw reads at top 10 family
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Family", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Family', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_family_raw_reads_bar.tiff')

#Bar plot raw reads at top 10 genus
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Genus", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Genus', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_genus_raw_reads_bar.tiff')

#Bar plot abudance reads at top 10 species
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Species", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Species', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_species_raw_reads_bar.tiff')

#######delete all variables to start over######
rm(list=ls())
###############################################


##########abudances##########
#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script
#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)

#convert to % abundances
phyloseqin <- microbiome::transform(phyloseqin, "compositional")

#Bar plot abudance reads at kingdom level (rank 2)
plot_bar(phyloseqin, fill = 'Kingdom', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/kingdom_level_abudance_reads_bar.tiff')

#Bar plot abudance reads at phylum levels (rank 2)
plot_bar(phyloseqin, fill = 'Phylum', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/phylum_level_abudance_reads_bar.tiff')

#Bar plot abudance reads at top 10 kingdom
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Kingdom", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Kingdom', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_kingdom_abudance_reads_bar.tiff')

#Bar plot abudance reads at top 10 phylum
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Phylum", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Phylum', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_phylum_abudance_reads_bar.tiff')

#Bar plot abudance reads at top 10 class
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Class", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Class', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_class_abudance_reads_bar.tiff')

#Bar plot abudance reads at top 10 order
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Order", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Order', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_order_abudance_reads_bar.tiff')

#Bar plot abudance reads at top 10 family
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Family", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Family', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_family_abudance_reads_bar.tiff')

#Bar plot abudance reads at top 10 genus
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Genus", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Genus', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_genus_abudance_reads_bar.tiff')

#Bar plot abudance reads at top 10 species
phyloseqin_merged = tax_glom(phyloseqin, taxrank="Species", NArm=FALSE)
TopNOTUs <- names(sort(taxa_sums(phyloseqin_merged), TRUE)[1:10])
Top10 <- prune_taxa(TopNOTUs, phyloseqin_merged)
plot_bar(Top10, fill = 'Species', x='Location')+ facet_wrap(~HP, scales='free_x', nrow=1) + xlab('Sample') + ylab('Reads')
ggsave('all_taxa/top10_species_abudance_reads_bar.tiff')

#######delete all variables to start over######
rm(list=ls())
###############################################


##########alpha diversity##########
#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script
#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)

#alpha diversity 
plot_richness(phyloseqin, x="HP") + geom_boxplot() +geom_point() + xlab('')
ggsave('all_taxa/alpha_diversity_all_metrics.tiff')
plot_richness(phyloseqin, x="HP", measures=c("Observed", "Chao1", "Shannon", "Simpson")) + geom_boxplot() +geom_point()+ xlab('')
ggsave('all_taxa/alpha_diversity_observed_chao1_shannon_simpson.tiff')

#statistical analysis of alpha diversity 
rich = estimate_richness(phyloseqin)
pairwise.wilcox.test(rich$Observed, sample_data(phyloseqin)$HP)
pairwise.wilcox.test(rich$Chao1, sample_data(phyloseqin)$HP)
pairwise.wilcox.test(rich$Shannon, sample_data(phyloseqin)$HP)
pairwise.wilcox.test(rich$Simpson, sample_data(phyloseqin)$HP)


#######delete all variables to start over######
rm(list=ls())
###############################################

##########Beta diversity - PCA with Aitchison Distance##########
##########Including Multivariate comparisons####################
#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script
#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)

#clr-transformed compositions of otu table
(ps_clr <- microbiome::transform(phyloseqin, "clr"))

#compare orignal otu table
phyloseq::otu_table(phyloseqin)[1:5, 1:5]

#compare clr-transformed compositions of otu table
phyloseq::otu_table(ps_clr)[1:5, 1:5]

#Beta Diversity PCA using  Aitchison distance (PCA using the Euclidean distance between clr-transformed compositions)
ord_clr <- phyloseq::ordinate(ps_clr, "PCoA", "euclidean")

#Plot scree plot
phyloseq::plot_scree(ord_clr) +  geom_bar(stat="identity", fill = "blue") + labs(x = "\nAxis", y = "Proportion of Variance\n")
ggsave('all_taxa/Aitchison_scree_plot.tiff')

#PCR of Aitchison distance
plot_ordination(ps_clr, ord_clr, type="Sample", color="HP")+ geom_point(size = 4)+ geom_text(mapping=aes(label=Location),size=4,vjust=1.5)+ stat_ellipse(geom = "polygon", alpha=0.1, aes(fill=HP))
ggsave('all_taxa/Aitchison_PCA_plot.tiff')

#Permutational ANOVA (PERMANOVA) analysis with adonis: partitioning the sums of squares for the within- and between-cluster components using the concept of centroids
#adonis significant p-value --> reject the null hypothesis that our groups have the same centroid.
distances = phyloseq::distance(ps_clr, method="euclidean")
adonis(distances ~ sample_data(ps_clr)$HP)

#Analysis of Similarities (ANOSIM): permutational non-parametric test of significance of the sample-grouping against a null-hypothesis. identifies if the between groups difference is larger than the within groups difference
group = get_variable(ps_clr, "HP")
anosim(distances, group)

#test  multivariate test for homogeneity of group dispersions (variances) with betadisper: ADONIS can be confounded by differences in dispersion (or spread)
dispr <- vegan::betadisper(distances, phyloseq::sample_data(ps_clr)$HP)
dispr
tiff('all_taxa/Aitchison_betadisper_PCA plot.tiff',width =7, height = 7,units ='in',res=100)
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
dev.off()
tiff('all_taxa/Aitchison_betadisper_boxplot.tiff',width =7, height = 7,units ='in',res=100)
boxplot(dispr, main = "", xlab = "")
dev.off()
permutest(dispr)
#betadisper results are not significant, meaning we cannot reject the null hypothesis that our groups have the same dispersions. This means we can be more confident that  adonis result is a real result, and not due to differences in group dispersions
#betadisper results are significant = datasets do not have the same variances. can not simply say that the communities consist of different OTUs. Among the two groups there is a difference in the abundances between the OTUs. Or better the evenness is different between these two groups.check alpha diversity as an indication that the evenness between our groups is different

#######delete all variables to start over######
rm(list=ls())
###############################################

##########Beta diversity - PCoA with Bray Curtis Distance##########
##########Including Multivariate comparisons#######################
#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script
#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)

#convert to % abundances
phyloseqin <- microbiome::transform(phyloseqin, "compositional")

#Beta Diversity PCoA plot using the bray distance on all taxa
ordination <- ordinate(phyloseqin, "PCoA", "bray")
plot_ordination(phyloseqin, ordination, type="Sample", color="HP")+ geom_point(size = 4)+ geom_text(mapping=aes(label=Location),size=4,vjust=1.5)+ stat_ellipse(geom = "polygon", alpha=0.1, aes(fill=HP))
ggsave('all_taxa/Bray_PCoA_plot.tiff')

#Permutational ANOVA (PERMANOVA) analysis with adonis: partitioning the sums of squares for the within- and between-cluster components using the concept of centroids
#adonis significant p-value --> reject the null hypothesis that our groups have the same centroid.
distances = phyloseq::distance(phyloseqin, method="bray")
adonis(distances ~ sample_data(phyloseqin)$HP)

#Analysis of Similarities (ANOSIM): permutational non-parametric test of significance of the sample-grouping against a null-hypothesis. identifies if the between groups difference is larger than the within groups difference
group = get_variable(phyloseqin, "HP")
anosim(distances, group)

#test  multivariate test for homogeneity of group dispersions (variances) with betadisper: ADONIS can be confounded by differences in dispersion (or spread)
dispr <- vegan::betadisper(distances, phyloseq::sample_data(phyloseqin)$HP)
dispr
tiff('all_taxa/Bray_betadisper_PCoA_plot.tiff',width =7, height = 7,units ='in',res=100)
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
dev.off()
tiff('all_taxa/Bray_betadisper_boxplot.tiff',width =7, height = 7,units ='in',res=100)
boxplot(dispr, main = "", xlab = "")
dev.off()
permutest(dispr)
#betadisper results are not significant, meaning we cannot reject the null hypothesis that our groups have the same dispersions. This means we can be more confident that  adonis result is a real result, and not due to differences in group dispersions
#betadisper results are significant = datasets do not have the same variances. can not simply say that the communities consist of different OTUs. Among the two groups there is a difference in the abundances between the OTUs. Or better the evenness is different between these two groups.check alpha diversity as an indication that the evenness between our groups is different


#######delete all variables to start over######
rm(list=ls())
###############################################


##########Differential Abundances##########

#ANOVA-like differential expression (ALDEx2)
#Use raw sequening reads
#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script
#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)


# Perform ALDEx2 analysis
set.seed(1234)
aldex2_da <- aldex(data.frame(otu_table(phyloseqin)),  sample_data(phyloseqin)$HP, mc.samples=1000, test="t", effect=TRUE, include.sample.summary=F, denom="all", verbose=TRUE)
tiff('all_taxa/ALDEx2_plot.tiff',width =7, height = 7,units ='in',res=100)
ALDEx2::aldex.plot(aldex2_da, type="MW", test="wilcox", called.cex = 2, cutoff = 0.05)
dev.off()
#The effect size plot shows the median log2 fold difference (Effect size) by the median log2 dispersion (variability)
#Points toward the top of the figure are more abundant in group 1 while those towards the bottom are more abundant in group 2. 
#Taxa with Benjaminin-Hochberg adjusted p-value (FDR) are shown in red.


#Table of different otus
sig_aldex2 <- aldex2_da %>% rownames_to_column(var = "OTU") %>% filter(wi.eBH < 0.05) %>% arrange(effect, wi.eBH) %>% dplyr::select(OTU, diff.btw, diff.win, effect, wi.ep, wi.eBH)
taxa_info <- data.frame(tax_table(phyloseqin))
taxa_info <- taxa_info %>% rownames_to_column(var = "OTU")
sig_aldex2 <- left_join(sig_aldex2, taxa_info)
sig_aldex2
ggplot(sig_aldex2, aes(reorder(Genus,-diff.btw),diff.btw, color=Phylum)) + geom_point(size=5) + theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))+geom_hline(yintercept = 0, linetype="dotted")+coord_flip()+ labs(y = "\nLog2 Fold-Change for Neg vs. Pos", x = "Genus")
ggsave('all_taxa/ALDEX2_dot_plot.tiff')
ggplot(sig_aldex2,aes(x=reorder(Genus,-diff.btw),y=diff.btw,fill=Phylum)) + geom_bar( stat='identity') + theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))+geom_hline(yintercept = 0, linetype="dotted")+coord_flip()+ labs(y = "\nLog2 Fold-Change for Neg vs. Pos", x = "Genus")
ggsave('all_taxa/ALDEX2_waterfall_plot.tiff')


#######delete all variables to start over######
rm(list=ls())
###############################################

#DESeq2
#Use raw sequening reads
#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script
#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)



# Convert phyloseq object to DESeqDataSet object specifying design formula with only case/control status as predictor
dds <- phyloseq_to_deseq2(phyloseqin, ~ HP)

# Calculate size factors using modified geometric means that can handle zeros and estimate normalization factors
dds <- estimateSizeFactors(dds, type="poscounts")

# Perform differential abundance analysis
dds <- DESeq(dds)

alpha = 0.01
res = results(dds, contrast=c("HP", "positive", "negative"), alpha=alpha)
res = res[order(res$padj, na.last=NA), ]
res_sig = res[(res$padj < alpha), ]
res_sig
#Make a genus vs log2FC plot of the significant OTUs
#Note change which Taxa levels are show on graph
res_sig2 = cbind(as(res_sig, "data.frame"), as(tax_table(phyloseqin)[rownames(res_sig), ], "matrix"))
ggplot(res_sig2, aes(reorder(Genus,-log2FoldChange),log2FoldChange, color=Phylum)) + geom_point(size=5) + theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))+    geom_hline(yintercept = 0, linetype="dotted")+coord_flip()+ labs(y = "\nLog2 Fold-Change for Neg vs. Pos", x = "Genus")
ggsave('all_taxa/DESeq2_dot_plot.tiff')
ggplot(res_sig2,aes(x=reorder(Genus,-log2FoldChange),y=log2FoldChange,fill=Phylum)) + geom_bar( stat='identity') + theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))+    geom_hline(yintercept = 0, linetype="dotted")+coord_flip()+ labs(y = "\nLog2 Fold-Change for Neg vs. Pos", x = "Genus")
ggsave('all_taxa/DESeq2_waterfall_plot.tiff')


#######delete all variables to start over######
rm(list=ls())
###############################################

#Analysis of Compositions of Microbiomes with Bias Correction (ANCOM-BC)
#Use raw sequening reads
#' script to convert the output of a metaphlan_taxonomic_table_joined.tsv object to a otu_table + tax_table object
#' 
#' 
#' @param phyloseq object 
#' @param 
#' @export
#' @examples
#' mtph_tbru_phy <- metaphlanToPhyloseq(tax = mtph_tbru, split = "|")
metaphlanToPhyloseq <- function(
  tax,
  metadat=NULL,
  simplenames=TRUE,
  roundtointeger=FALSE,
  split="|"){
  ## tax is a matrix or data.frame with the table of taxonomic abundances, rows are taxa, columns are samples
  ## metadat is an optional data.frame of specimen metadata, rows are samples, columns are variables
  ## if simplenames=TRUE, use only the most detailed level of taxa names in the final object
  ## if roundtointeger=TRUE, values will be rounded to the nearest integer
  xnames = rownames(tax)
  shortnames = gsub(paste0(".+\\", split), "", xnames)
  if(simplenames){
    rownames(tax) = shortnames
  }
  if(roundtointeger){
    tax = round(tax * 1e4)
  }
  x2 = strsplit(xnames, split=split, fixed=TRUE)
  taxmat = matrix(NA, ncol=max(sapply(x2, length)), nrow=length(x2))
  colnames(taxmat) = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")[1:ncol(taxmat)]
  rownames(taxmat) = rownames(tax)
  for (i in 1:nrow(taxmat)){
    taxmat[i, 1:length(x2[[i]])] <- x2[[i]]
  }
  taxmat = gsub("[a-z]__", "", taxmat)
  taxmat = phyloseq::tax_table(taxmat)
  otutab = phyloseq::otu_table(tax, taxa_are_rows=TRUE)
  if(is.null(metadat)){
    res = phyloseq::phyloseq(taxmat, otutab)
  }else{
    res = phyloseq::phyloseq(taxmat, otutab, phyloseq::sample_data(metadat))
  }
  return(res)
}
#end of script
#load mpa data and metadata tables
mphlanin <- read.csv("metagenomics_modified_db.txt", sep = "\t", strip.white = T, stringsAsFactors = F, row.names = 1)
metadata <- read.delim("meta.txt", header=TRUE, sep = "\t",row.names = 1)
phyloseqin= metaphlanToPhyloseq(mphlanin, metadat = metadata)




# Run ANCOM-BC
ancom_da <- ancombc(phyloseq = phyloseqin, formula = "HP", p_adj_method = "BH", zero_cut = 1, lib_cut = 0, group = NULL, struc_zero = FALSE, neg_lb = FALSE, tol = 1e-05, max_iter = 100,  conserve = FALSE, alpha = 0.05, global = FALSE)

ancom_res_df <- data.frame(
  Species = row.names(ancom_da$res$beta),
  beta = unlist(ancom_da$res$beta),
  se = unlist(ancom_da$res$se),
  W = unlist(ancom_da$res$W),
  p_val = unlist(ancom_da$res$p_val),
  q_val = unlist(ancom_da$res$q_val),
  diff_abn = unlist(ancom_da$res$diff_abn))

fdr_ancom <- ancom_res_df %>% dplyr::filter(q_val < 0.05)
fdr_ancom <- ancom_res_df %>% dplyr::filter(diff_abn=='TRUE')
rownames(fdr_ancom) <- fdr_ancom$Species			  
fdr_ancom2 = cbind(as(fdr_ancom, "data.frame"), as(tax_table(phyloseqin)[rownames(fdr_ancom), ], "matrix"))
fdr_ancom2 = fdr_ancom2[, !duplicated(colnames(fdr_ancom2))]
ggplot(fdr_ancom2, aes(reorder(Genus,-beta),beta, color=Phylum)) + geom_point(size=5) + theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))+    geom_hline(yintercept = 0, linetype="dotted")+coord_flip()+ labs(y = "\nLog2 Fold-Change for Neg vs. Pos", x = "Genus")+geom_errorbar(aes(ymin = beta-se, ymax = beta+se), width = 0.2, position = position_dodge(0.05), color = "black")
ggsave('all_taxa/ANCOM-BC_dot_plot.tiff')
ggplot(fdr_ancom2,aes(x=reorder(Genus,-beta),y=beta,fill=Phylum)) + geom_bar( stat='identity') + theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))+    geom_hline(yintercept = 0, linetype="dotted")+coord_flip()+ labs(y = "\nLog2 Fold-Change for Neg vs. Pos", x = "Genus")+geom_errorbar(aes(ymin = beta-se, ymax = beta+se), width = 0.2, position = position_dodge(0.05), color = "black")
ggsave('all_taxa/ANCOM-BC_waterfall_plot.tiff')
